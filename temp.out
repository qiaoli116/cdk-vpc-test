region: ${Token[AWS.Region.12]}
account: ${Token[AWS.AccountId.8]}
AZs: #{Token[TOKEN.632]}
AZ 0 = us-east-2a
AZ 1 = us-east-1b
AZ 2 = us-east-1c
AZ 3 = us-east-1d
AZ 4 = us-east-1e
AZ 5 = us-east-1f
Resources:
  MyVpcB9FF1A25:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.1.0.0/16
      EnableDnsHostnames: true
      EnableDnsSupport: true
      InstanceTenancy: default
      Tags:
        - Key: Name
          Value: MyvpcStack/MyVpc/MyVpc
    Metadata:
      aws:cdk:path: MyvpcStack/MyVpc/MyVpc/Resource
  MyVpcPublicSubnet1SubnetC183DEBB:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: MyVpcB9FF1A25
      AvailabilityZone: us-east-2a
      CidrBlock: 10.1.0.0/20
      MapPublicIpOnLaunch: true
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Public
        - Key: aws-cdk:subnet-type
          Value: Public
        - Key: Name
          Value: MyvpcStack/MyVpc/MyVpc/PublicSubnet1
    Metadata:
      aws:cdk:path: MyvpcStack/MyVpc/MyVpc/PublicSubnet1/Subnet
  MyVpcPublicSubnet1RouteTableAD7D88BF:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: MyVpcB9FF1A25
      Tags:
        - Key: Name
          Value: MyvpcStack/MyVpc/MyVpc/PublicSubnet1
    Metadata:
      aws:cdk:path: MyvpcStack/MyVpc/MyVpc/PublicSubnet1/RouteTable
  MyVpcPublicSubnet1RouteTableAssociationED8356BC:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: MyVpcPublicSubnet1RouteTableAD7D88BF
      SubnetId:
        Ref: MyVpcPublicSubnet1SubnetC183DEBB
    Metadata:
      aws:cdk:path: MyvpcStack/MyVpc/MyVpc/PublicSubnet1/RouteTableAssociation
  MyVpcPublicSubnet1DefaultRouteBC1CE646:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: MyVpcPublicSubnet1RouteTableAD7D88BF
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: MyVpcIGW0E1069B4
    DependsOn:
      - MyVpcVPCGWCE1C120C
    Metadata:
      aws:cdk:path: MyvpcStack/MyVpc/MyVpc/PublicSubnet1/DefaultRoute
  MyVpcPublicSubnet1EIPFE665928:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: MyvpcStack/MyVpc/MyVpc/PublicSubnet1
    Metadata:
      aws:cdk:path: MyvpcStack/MyVpc/MyVpc/PublicSubnet1/EIP
  MyVpcPublicSubnet1NATGateway5BF49708:
    Type: AWS::EC2::NatGateway
    Properties:
      SubnetId:
        Ref: MyVpcPublicSubnet1SubnetC183DEBB
      AllocationId:
        Fn::GetAtt:
          - MyVpcPublicSubnet1EIPFE665928
          - AllocationId
      Tags:
        - Key: Name
          Value: MyvpcStack/MyVpc/MyVpc/PublicSubnet1
    DependsOn:
      - MyVpcPublicSubnet1DefaultRouteBC1CE646
      - MyVpcPublicSubnet1RouteTableAssociationED8356BC
    Metadata:
      aws:cdk:path: MyvpcStack/MyVpc/MyVpc/PublicSubnet1/NATGateway
  MyVpcPublicSubnet2SubnetE60F427D:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: MyVpcB9FF1A25
      AvailabilityZone: us-east-1b
      CidrBlock: 10.1.16.0/20
      MapPublicIpOnLaunch: true
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Public
        - Key: aws-cdk:subnet-type
          Value: Public
        - Key: Name
          Value: MyvpcStack/MyVpc/MyVpc/PublicSubnet2
    Metadata:
      aws:cdk:path: MyvpcStack/MyVpc/MyVpc/PublicSubnet2/Subnet
  MyVpcPublicSubnet2RouteTable5FC7EA83:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: MyVpcB9FF1A25
      Tags:
        - Key: Name
          Value: MyvpcStack/MyVpc/MyVpc/PublicSubnet2
    Metadata:
      aws:cdk:path: MyvpcStack/MyVpc/MyVpc/PublicSubnet2/RouteTable
  MyVpcPublicSubnet2RouteTableAssociationE424F7E5:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: MyVpcPublicSubnet2RouteTable5FC7EA83
      SubnetId:
        Ref: MyVpcPublicSubnet2SubnetE60F427D
    Metadata:
      aws:cdk:path: MyvpcStack/MyVpc/MyVpc/PublicSubnet2/RouteTableAssociation
  MyVpcPublicSubnet2DefaultRouteE9959ECF:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: MyVpcPublicSubnet2RouteTable5FC7EA83
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: MyVpcIGW0E1069B4
    DependsOn:
      - MyVpcVPCGWCE1C120C
    Metadata:
      aws:cdk:path: MyvpcStack/MyVpc/MyVpc/PublicSubnet2/DefaultRoute
  MyVpcPublicSubnet2EIP9FC2216F:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: MyvpcStack/MyVpc/MyVpc/PublicSubnet2
    Metadata:
      aws:cdk:path: MyvpcStack/MyVpc/MyVpc/PublicSubnet2/EIP
  MyVpcPublicSubnet2NATGatewayF9AD457E:
    Type: AWS::EC2::NatGateway
    Properties:
      SubnetId:
        Ref: MyVpcPublicSubnet2SubnetE60F427D
      AllocationId:
        Fn::GetAtt:
          - MyVpcPublicSubnet2EIP9FC2216F
          - AllocationId
      Tags:
        - Key: Name
          Value: MyvpcStack/MyVpc/MyVpc/PublicSubnet2
    DependsOn:
      - MyVpcPublicSubnet2DefaultRouteE9959ECF
      - MyVpcPublicSubnet2RouteTableAssociationE424F7E5
    Metadata:
      aws:cdk:path: MyvpcStack/MyVpc/MyVpc/PublicSubnet2/NATGateway
  MyVpcPublicSubnet3Subnet59BECDF0:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: MyVpcB9FF1A25
      AvailabilityZone: us-east-1c
      CidrBlock: 10.1.32.0/20
      MapPublicIpOnLaunch: true
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Public
        - Key: aws-cdk:subnet-type
          Value: Public
        - Key: Name
          Value: MyvpcStack/MyVpc/MyVpc/PublicSubnet3
    Metadata:
      aws:cdk:path: MyvpcStack/MyVpc/MyVpc/PublicSubnet3/Subnet
  MyVpcPublicSubnet3RouteTable94A8332A:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: MyVpcB9FF1A25
      Tags:
        - Key: Name
          Value: MyvpcStack/MyVpc/MyVpc/PublicSubnet3
    Metadata:
      aws:cdk:path: MyvpcStack/MyVpc/MyVpc/PublicSubnet3/RouteTable
  MyVpcPublicSubnet3RouteTableAssociation10A7399B:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: MyVpcPublicSubnet3RouteTable94A8332A
      SubnetId:
        Ref: MyVpcPublicSubnet3Subnet59BECDF0
    Metadata:
      aws:cdk:path: MyvpcStack/MyVpc/MyVpc/PublicSubnet3/RouteTableAssociation
  MyVpcPublicSubnet3DefaultRoute30D134AC:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: MyVpcPublicSubnet3RouteTable94A8332A
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: MyVpcIGW0E1069B4
    DependsOn:
      - MyVpcVPCGWCE1C120C
    Metadata:
      aws:cdk:path: MyvpcStack/MyVpc/MyVpc/PublicSubnet3/DefaultRoute
  MyVpcPublicSubnet3EIPB1E95A97:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: MyvpcStack/MyVpc/MyVpc/PublicSubnet3
    Metadata:
      aws:cdk:path: MyvpcStack/MyVpc/MyVpc/PublicSubnet3/EIP
  MyVpcPublicSubnet3NATGatewayE8F18B51:
    Type: AWS::EC2::NatGateway
    Properties:
      SubnetId:
        Ref: MyVpcPublicSubnet3Subnet59BECDF0
      AllocationId:
        Fn::GetAtt:
          - MyVpcPublicSubnet3EIPB1E95A97
          - AllocationId
      Tags:
        - Key: Name
          Value: MyvpcStack/MyVpc/MyVpc/PublicSubnet3
    DependsOn:
      - MyVpcPublicSubnet3DefaultRoute30D134AC
      - MyVpcPublicSubnet3RouteTableAssociation10A7399B
    Metadata:
      aws:cdk:path: MyvpcStack/MyVpc/MyVpc/PublicSubnet3/NATGateway
  MyVpcPublicSubnet4SubnetF3F8613D:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: MyVpcB9FF1A25
      AvailabilityZone: us-east-1d
      CidrBlock: 10.1.48.0/20
      MapPublicIpOnLaunch: true
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Public
        - Key: aws-cdk:subnet-type
          Value: Public
        - Key: Name
          Value: MyvpcStack/MyVpc/MyVpc/PublicSubnet4
    Metadata:
      aws:cdk:path: MyvpcStack/MyVpc/MyVpc/PublicSubnet4/Subnet
  MyVpcPublicSubnet4RouteTable78291DE3:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: MyVpcB9FF1A25
      Tags:
        - Key: Name
          Value: MyvpcStack/MyVpc/MyVpc/PublicSubnet4
    Metadata:
      aws:cdk:path: MyvpcStack/MyVpc/MyVpc/PublicSubnet4/RouteTable
  MyVpcPublicSubnet4RouteTableAssociation7992748C:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: MyVpcPublicSubnet4RouteTable78291DE3
      SubnetId:
        Ref: MyVpcPublicSubnet4SubnetF3F8613D
    Metadata:
      aws:cdk:path: MyvpcStack/MyVpc/MyVpc/PublicSubnet4/RouteTableAssociation
  MyVpcPublicSubnet4DefaultRouteD6E1EBE1:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: MyVpcPublicSubnet4RouteTable78291DE3
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: MyVpcIGW0E1069B4
    DependsOn:
      - MyVpcVPCGWCE1C120C
    Metadata:
      aws:cdk:path: MyvpcStack/MyVpc/MyVpc/PublicSubnet4/DefaultRoute
  MyVpcPublicSubnet4EIP5E991340:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: MyvpcStack/MyVpc/MyVpc/PublicSubnet4
    Metadata:
      aws:cdk:path: MyvpcStack/MyVpc/MyVpc/PublicSubnet4/EIP
  MyVpcPublicSubnet4NATGateway6585A409:
    Type: AWS::EC2::NatGateway
    Properties:
      SubnetId:
        Ref: MyVpcPublicSubnet4SubnetF3F8613D
      AllocationId:
        Fn::GetAtt:
          - MyVpcPublicSubnet4EIP5E991340
          - AllocationId
      Tags:
        - Key: Name
          Value: MyvpcStack/MyVpc/MyVpc/PublicSubnet4
    DependsOn:
      - MyVpcPublicSubnet4DefaultRouteD6E1EBE1
      - MyVpcPublicSubnet4RouteTableAssociation7992748C
    Metadata:
      aws:cdk:path: MyvpcStack/MyVpc/MyVpc/PublicSubnet4/NATGateway
  MyVpcPublicSubnet5Subnet869BBE24:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: MyVpcB9FF1A25
      AvailabilityZone: us-east-1e
      CidrBlock: 10.1.64.0/20
      MapPublicIpOnLaunch: true
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Public
        - Key: aws-cdk:subnet-type
          Value: Public
        - Key: Name
          Value: MyvpcStack/MyVpc/MyVpc/PublicSubnet5
    Metadata:
      aws:cdk:path: MyvpcStack/MyVpc/MyVpc/PublicSubnet5/Subnet
  MyVpcPublicSubnet5RouteTable554624AD:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: MyVpcB9FF1A25
      Tags:
        - Key: Name
          Value: MyvpcStack/MyVpc/MyVpc/PublicSubnet5
    Metadata:
      aws:cdk:path: MyvpcStack/MyVpc/MyVpc/PublicSubnet5/RouteTable
  MyVpcPublicSubnet5RouteTableAssociationB4182CAC:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: MyVpcPublicSubnet5RouteTable554624AD
      SubnetId:
        Ref: MyVpcPublicSubnet5Subnet869BBE24
    Metadata:
      aws:cdk:path: MyvpcStack/MyVpc/MyVpc/PublicSubnet5/RouteTableAssociation
  MyVpcPublicSubnet5DefaultRouteF7C19C4E:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: MyVpcPublicSubnet5RouteTable554624AD
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: MyVpcIGW0E1069B4
    DependsOn:
      - MyVpcVPCGWCE1C120C
    Metadata:
      aws:cdk:path: MyvpcStack/MyVpc/MyVpc/PublicSubnet5/DefaultRoute
  MyVpcPublicSubnet5EIPCA9CE04C:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: MyvpcStack/MyVpc/MyVpc/PublicSubnet5
    Metadata:
      aws:cdk:path: MyvpcStack/MyVpc/MyVpc/PublicSubnet5/EIP
  MyVpcPublicSubnet5NATGateway4FB9CE5C:
    Type: AWS::EC2::NatGateway
    Properties:
      SubnetId:
        Ref: MyVpcPublicSubnet5Subnet869BBE24
      AllocationId:
        Fn::GetAtt:
          - MyVpcPublicSubnet5EIPCA9CE04C
          - AllocationId
      Tags:
        - Key: Name
          Value: MyvpcStack/MyVpc/MyVpc/PublicSubnet5
    DependsOn:
      - MyVpcPublicSubnet5DefaultRouteF7C19C4E
      - MyVpcPublicSubnet5RouteTableAssociationB4182CAC
    Metadata:
      aws:cdk:path: MyvpcStack/MyVpc/MyVpc/PublicSubnet5/NATGateway
  MyVpcPublicSubnet6Subnet9CB86119:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: MyVpcB9FF1A25
      AvailabilityZone: us-east-1f
      CidrBlock: 10.1.80.0/20
      MapPublicIpOnLaunch: true
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Public
        - Key: aws-cdk:subnet-type
          Value: Public
        - Key: Name
          Value: MyvpcStack/MyVpc/MyVpc/PublicSubnet6
    Metadata:
      aws:cdk:path: MyvpcStack/MyVpc/MyVpc/PublicSubnet6/Subnet
  MyVpcPublicSubnet6RouteTable83B8D421:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: MyVpcB9FF1A25
      Tags:
        - Key: Name
          Value: MyvpcStack/MyVpc/MyVpc/PublicSubnet6
    Metadata:
      aws:cdk:path: MyvpcStack/MyVpc/MyVpc/PublicSubnet6/RouteTable
  MyVpcPublicSubnet6RouteTableAssociation5C1800CC:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: MyVpcPublicSubnet6RouteTable83B8D421
      SubnetId:
        Ref: MyVpcPublicSubnet6Subnet9CB86119
    Metadata:
      aws:cdk:path: MyvpcStack/MyVpc/MyVpc/PublicSubnet6/RouteTableAssociation
  MyVpcPublicSubnet6DefaultRoute0D8C15FC:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: MyVpcPublicSubnet6RouteTable83B8D421
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: MyVpcIGW0E1069B4
    DependsOn:
      - MyVpcVPCGWCE1C120C
    Metadata:
      aws:cdk:path: MyvpcStack/MyVpc/MyVpc/PublicSubnet6/DefaultRoute
  MyVpcPublicSubnet6EIPA5462584:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: MyvpcStack/MyVpc/MyVpc/PublicSubnet6
    Metadata:
      aws:cdk:path: MyvpcStack/MyVpc/MyVpc/PublicSubnet6/EIP
  MyVpcPublicSubnet6NATGatewayA66A93AD:
    Type: AWS::EC2::NatGateway
    Properties:
      SubnetId:
        Ref: MyVpcPublicSubnet6Subnet9CB86119
      AllocationId:
        Fn::GetAtt:
          - MyVpcPublicSubnet6EIPA5462584
          - AllocationId
      Tags:
        - Key: Name
          Value: MyvpcStack/MyVpc/MyVpc/PublicSubnet6
    DependsOn:
      - MyVpcPublicSubnet6DefaultRoute0D8C15FC
      - MyVpcPublicSubnet6RouteTableAssociation5C1800CC
    Metadata:
      aws:cdk:path: MyvpcStack/MyVpc/MyVpc/PublicSubnet6/NATGateway
  MyVpcPrivateSubnet1SubnetB5C3C71B:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: MyVpcB9FF1A25
      AvailabilityZone: us-east-2a
      CidrBlock: 10.1.96.0/20
      MapPublicIpOnLaunch: false
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Private
        - Key: aws-cdk:subnet-type
          Value: Private
        - Key: Name
          Value: MyvpcStack/MyVpc/MyVpc/PrivateSubnet1
    Metadata:
      aws:cdk:path: MyvpcStack/MyVpc/MyVpc/PrivateSubnet1/Subnet
  MyVpcPrivateSubnet1RouteTableC3C64E16:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: MyVpcB9FF1A25
      Tags:
        - Key: Name
          Value: MyvpcStack/MyVpc/MyVpc/PrivateSubnet1
    Metadata:
      aws:cdk:path: MyvpcStack/MyVpc/MyVpc/PrivateSubnet1/RouteTable
  MyVpcPrivateSubnet1RouteTableAssociation84620FCB:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: MyVpcPrivateSubnet1RouteTableC3C64E16
      SubnetId:
        Ref: MyVpcPrivateSubnet1SubnetB5C3C71B
    Metadata:
      aws:cdk:path: MyvpcStack/MyVpc/MyVpc/PrivateSubnet1/RouteTableAssociation
  MyVpcPrivateSubnet1DefaultRouteFA645ECD:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: MyVpcPrivateSubnet1RouteTableC3C64E16
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: MyVpcPublicSubnet1NATGateway5BF49708
    Metadata:
      aws:cdk:path: MyvpcStack/MyVpc/MyVpc/PrivateSubnet1/DefaultRoute
  MyVpcPrivateSubnet2SubnetF527944A:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: MyVpcB9FF1A25
      AvailabilityZone: us-east-1b
      CidrBlock: 10.1.112.0/20
      MapPublicIpOnLaunch: false
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Private
        - Key: aws-cdk:subnet-type
          Value: Private
        - Key: Name
          Value: MyvpcStack/MyVpc/MyVpc/PrivateSubnet2
    Metadata:
      aws:cdk:path: MyvpcStack/MyVpc/MyVpc/PrivateSubnet2/Subnet
  MyVpcPrivateSubnet2RouteTableC376D470:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: MyVpcB9FF1A25
      Tags:
        - Key: Name
          Value: MyvpcStack/MyVpc/MyVpc/PrivateSubnet2
    Metadata:
      aws:cdk:path: MyvpcStack/MyVpc/MyVpc/PrivateSubnet2/RouteTable
  MyVpcPrivateSubnet2RouteTableAssociation580EDB19:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: MyVpcPrivateSubnet2RouteTableC376D470
      SubnetId:
        Ref: MyVpcPrivateSubnet2SubnetF527944A
    Metadata:
      aws:cdk:path: MyvpcStack/MyVpc/MyVpc/PrivateSubnet2/RouteTableAssociation
  MyVpcPrivateSubnet2DefaultRoute68AF00CF:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: MyVpcPrivateSubnet2RouteTableC376D470
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: MyVpcPublicSubnet2NATGatewayF9AD457E
    Metadata:
      aws:cdk:path: MyvpcStack/MyVpc/MyVpc/PrivateSubnet2/DefaultRoute
  MyVpcPrivateSubnet3Subnet1EEC4F2F:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: MyVpcB9FF1A25
      AvailabilityZone: us-east-1c
      CidrBlock: 10.1.128.0/20
      MapPublicIpOnLaunch: false
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Private
        - Key: aws-cdk:subnet-type
          Value: Private
        - Key: Name
          Value: MyvpcStack/MyVpc/MyVpc/PrivateSubnet3
    Metadata:
      aws:cdk:path: MyvpcStack/MyVpc/MyVpc/PrivateSubnet3/Subnet
  MyVpcPrivateSubnet3RouteTable795EF4A2:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: MyVpcB9FF1A25
      Tags:
        - Key: Name
          Value: MyvpcStack/MyVpc/MyVpc/PrivateSubnet3
    Metadata:
      aws:cdk:path: MyvpcStack/MyVpc/MyVpc/PrivateSubnet3/RouteTable
  MyVpcPrivateSubnet3RouteTableAssociation910AC33C:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: MyVpcPrivateSubnet3RouteTable795EF4A2
      SubnetId:
        Ref: MyVpcPrivateSubnet3Subnet1EEC4F2F
    Metadata:
      aws:cdk:path: MyvpcStack/MyVpc/MyVpc/PrivateSubnet3/RouteTableAssociation
  MyVpcPrivateSubnet3DefaultRoute70EE4593:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: MyVpcPrivateSubnet3RouteTable795EF4A2
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: MyVpcPublicSubnet3NATGatewayE8F18B51
    Metadata:
      aws:cdk:path: MyvpcStack/MyVpc/MyVpc/PrivateSubnet3/DefaultRoute
  MyVpcPrivateSubnet4Subnet3C7F8265:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: MyVpcB9FF1A25
      AvailabilityZone: us-east-1d
      CidrBlock: 10.1.144.0/20
      MapPublicIpOnLaunch: false
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Private
        - Key: aws-cdk:subnet-type
          Value: Private
        - Key: Name
          Value: MyvpcStack/MyVpc/MyVpc/PrivateSubnet4
    Metadata:
      aws:cdk:path: MyvpcStack/MyVpc/MyVpc/PrivateSubnet4/Subnet
  MyVpcPrivateSubnet4RouteTable574E6B02:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: MyVpcB9FF1A25
      Tags:
        - Key: Name
          Value: MyvpcStack/MyVpc/MyVpc/PrivateSubnet4
    Metadata:
      aws:cdk:path: MyvpcStack/MyVpc/MyVpc/PrivateSubnet4/RouteTable
  MyVpcPrivateSubnet4RouteTableAssociationB5688846:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: MyVpcPrivateSubnet4RouteTable574E6B02
      SubnetId:
        Ref: MyVpcPrivateSubnet4Subnet3C7F8265
    Metadata:
      aws:cdk:path: MyvpcStack/MyVpc/MyVpc/PrivateSubnet4/RouteTableAssociation
  MyVpcPrivateSubnet4DefaultRouteBE1B6CE4:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: MyVpcPrivateSubnet4RouteTable574E6B02
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: MyVpcPublicSubnet4NATGateway6585A409
    Metadata:
      aws:cdk:path: MyvpcStack/MyVpc/MyVpc/PrivateSubnet4/DefaultRoute
  MyVpcPrivateSubnet5SubnetA54C35B4:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: MyVpcB9FF1A25
      AvailabilityZone: us-east-1e
      CidrBlock: 10.1.160.0/20
      MapPublicIpOnLaunch: false
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Private
        - Key: aws-cdk:subnet-type
          Value: Private
        - Key: Name
          Value: MyvpcStack/MyVpc/MyVpc/PrivateSubnet5
    Metadata:
      aws:cdk:path: MyvpcStack/MyVpc/MyVpc/PrivateSubnet5/Subnet
  MyVpcPrivateSubnet5RouteTableC630A4A3:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: MyVpcB9FF1A25
      Tags:
        - Key: Name
          Value: MyvpcStack/MyVpc/MyVpc/PrivateSubnet5
    Metadata:
      aws:cdk:path: MyvpcStack/MyVpc/MyVpc/PrivateSubnet5/RouteTable
  MyVpcPrivateSubnet5RouteTableAssociation4A46E9D3:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: MyVpcPrivateSubnet5RouteTableC630A4A3
      SubnetId:
        Ref: MyVpcPrivateSubnet5SubnetA54C35B4
    Metadata:
      aws:cdk:path: MyvpcStack/MyVpc/MyVpc/PrivateSubnet5/RouteTableAssociation
  MyVpcPrivateSubnet5DefaultRoute4EFFF835:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: MyVpcPrivateSubnet5RouteTableC630A4A3
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: MyVpcPublicSubnet5NATGateway4FB9CE5C
    Metadata:
      aws:cdk:path: MyvpcStack/MyVpc/MyVpc/PrivateSubnet5/DefaultRoute
  MyVpcPrivateSubnet6Subnet598F3B15:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: MyVpcB9FF1A25
      AvailabilityZone: us-east-1f
      CidrBlock: 10.1.176.0/20
      MapPublicIpOnLaunch: false
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Private
        - Key: aws-cdk:subnet-type
          Value: Private
        - Key: Name
          Value: MyvpcStack/MyVpc/MyVpc/PrivateSubnet6
    Metadata:
      aws:cdk:path: MyvpcStack/MyVpc/MyVpc/PrivateSubnet6/Subnet
  MyVpcPrivateSubnet6RouteTable5DCAA065:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: MyVpcB9FF1A25
      Tags:
        - Key: Name
          Value: MyvpcStack/MyVpc/MyVpc/PrivateSubnet6
    Metadata:
      aws:cdk:path: MyvpcStack/MyVpc/MyVpc/PrivateSubnet6/RouteTable
  MyVpcPrivateSubnet6RouteTableAssociation4884E61E:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: MyVpcPrivateSubnet6RouteTable5DCAA065
      SubnetId:
        Ref: MyVpcPrivateSubnet6Subnet598F3B15
    Metadata:
      aws:cdk:path: MyvpcStack/MyVpc/MyVpc/PrivateSubnet6/RouteTableAssociation
  MyVpcPrivateSubnet6DefaultRouteF7ABDB9D:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: MyVpcPrivateSubnet6RouteTable5DCAA065
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: MyVpcPublicSubnet6NATGatewayA66A93AD
    Metadata:
      aws:cdk:path: MyvpcStack/MyVpc/MyVpc/PrivateSubnet6/DefaultRoute
  MyVpcIGW0E1069B4:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: MyvpcStack/MyVpc/MyVpc
    Metadata:
      aws:cdk:path: MyvpcStack/MyVpc/MyVpc/IGW
  MyVpcVPCGWCE1C120C:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId:
        Ref: MyVpcB9FF1A25
      InternetGatewayId:
        Ref: MyVpcIGW0E1069B4
    Metadata:
      aws:cdk:path: MyvpcStack/MyVpc/MyVpc/VPCGW
  MyVpcRestrictDefaultSecurityGroupCustomResource20906CDA:
    Type: Custom::VpcRestrictDefaultSG
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - CustomVpcRestrictDefaultSGCustomResourceProviderHandlerDC833E5E
          - Arn
      DefaultSecurityGroupId:
        Fn::GetAtt:
          - MyVpcB9FF1A25
          - DefaultSecurityGroup
      Account:
        Ref: AWS::AccountId
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: MyvpcStack/MyVpc/MyVpc/RestrictDefaultSecurityGroupCustomResource/Default
  MyVpcSubnet0Subnet431AE739:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: MyVpcB9FF1A25
      AvailabilityZone: us-east-2a
      CidrBlock:
        Fn::Select:
          - 0
          - Fn::Cidr:
              - 10.1.0.0/16
              - 6
              - "8"
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: MyvpcStack/MyVpc/Subnet-0
    Metadata:
      aws:cdk:path: MyvpcStack/MyVpc/Subnet-0/Subnet
  MyVpcSubnet0RouteTable9040F466:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: MyVpcB9FF1A25
      Tags:
        - Key: Name
          Value: MyvpcStack/MyVpc/Subnet-0
    Metadata:
      aws:cdk:path: MyvpcStack/MyVpc/Subnet-0/RouteTable
  MyVpcSubnet0RouteTableAssociation4BED3928:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: MyVpcSubnet0RouteTable9040F466
      SubnetId:
        Ref: MyVpcSubnet0Subnet431AE739
    Metadata:
      aws:cdk:path: MyvpcStack/MyVpc/Subnet-0/RouteTableAssociation
  MyVpcSubnet1SubnetE30C21D6:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: MyVpcB9FF1A25
      AvailabilityZone: us-east-1b
      CidrBlock:
        Fn::Select:
          - 1
          - Fn::Cidr:
              - 10.1.0.0/16
              - 6
              - "8"
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: MyvpcStack/MyVpc/Subnet-1
    Metadata:
      aws:cdk:path: MyvpcStack/MyVpc/Subnet-1/Subnet
  MyVpcSubnet1RouteTable36348A94:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: MyVpcB9FF1A25
      Tags:
        - Key: Name
          Value: MyvpcStack/MyVpc/Subnet-1
    Metadata:
      aws:cdk:path: MyvpcStack/MyVpc/Subnet-1/RouteTable
  MyVpcSubnet1RouteTableAssociation3181F5E5:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: MyVpcSubnet1RouteTable36348A94
      SubnetId:
        Ref: MyVpcSubnet1SubnetE30C21D6
    Metadata:
      aws:cdk:path: MyvpcStack/MyVpc/Subnet-1/RouteTableAssociation
  MyVpcSubnet2Subnet35A9B256:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: MyVpcB9FF1A25
      AvailabilityZone: us-east-1c
      CidrBlock:
        Fn::Select:
          - 2
          - Fn::Cidr:
              - 10.1.0.0/16
              - 6
              - "8"
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: MyvpcStack/MyVpc/Subnet-2
    Metadata:
      aws:cdk:path: MyvpcStack/MyVpc/Subnet-2/Subnet
  MyVpcSubnet2RouteTable88F0C3E1:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: MyVpcB9FF1A25
      Tags:
        - Key: Name
          Value: MyvpcStack/MyVpc/Subnet-2
    Metadata:
      aws:cdk:path: MyvpcStack/MyVpc/Subnet-2/RouteTable
  MyVpcSubnet2RouteTableAssociation95735165:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: MyVpcSubnet2RouteTable88F0C3E1
      SubnetId:
        Ref: MyVpcSubnet2Subnet35A9B256
    Metadata:
      aws:cdk:path: MyvpcStack/MyVpc/Subnet-2/RouteTableAssociation
  MyVpcSubnet3Subnet3103C807:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: MyVpcB9FF1A25
      AvailabilityZone: us-east-1d
      CidrBlock:
        Fn::Select:
          - 3
          - Fn::Cidr:
              - 10.1.0.0/16
              - 6
              - "8"
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: MyvpcStack/MyVpc/Subnet-3
    Metadata:
      aws:cdk:path: MyvpcStack/MyVpc/Subnet-3/Subnet
  MyVpcSubnet3RouteTableA690F455:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: MyVpcB9FF1A25
      Tags:
        - Key: Name
          Value: MyvpcStack/MyVpc/Subnet-3
    Metadata:
      aws:cdk:path: MyvpcStack/MyVpc/Subnet-3/RouteTable
  MyVpcSubnet3RouteTableAssociationD6811DF8:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: MyVpcSubnet3RouteTableA690F455
      SubnetId:
        Ref: MyVpcSubnet3Subnet3103C807
    Metadata:
      aws:cdk:path: MyvpcStack/MyVpc/Subnet-3/RouteTableAssociation
  MyVpcSubnet4SubnetC29AB651:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: MyVpcB9FF1A25
      AvailabilityZone: us-east-1e
      CidrBlock:
        Fn::Select:
          - 4
          - Fn::Cidr:
              - 10.1.0.0/16
              - 6
              - "8"
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: MyvpcStack/MyVpc/Subnet-4
    Metadata:
      aws:cdk:path: MyvpcStack/MyVpc/Subnet-4/Subnet
  MyVpcSubnet4RouteTableD973B7E6:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: MyVpcB9FF1A25
      Tags:
        - Key: Name
          Value: MyvpcStack/MyVpc/Subnet-4
    Metadata:
      aws:cdk:path: MyvpcStack/MyVpc/Subnet-4/RouteTable
  MyVpcSubnet4RouteTableAssociationDB957769:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: MyVpcSubnet4RouteTableD973B7E6
      SubnetId:
        Ref: MyVpcSubnet4SubnetC29AB651
    Metadata:
      aws:cdk:path: MyvpcStack/MyVpc/Subnet-4/RouteTableAssociation
  MyVpcSubnet5Subnet5513865A:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: MyVpcB9FF1A25
      AvailabilityZone: us-east-1f
      CidrBlock:
        Fn::Select:
          - 5
          - Fn::Cidr:
              - 10.1.0.0/16
              - 6
              - "8"
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: MyvpcStack/MyVpc/Subnet-5
    Metadata:
      aws:cdk:path: MyvpcStack/MyVpc/Subnet-5/Subnet
  MyVpcSubnet5RouteTable6F28B908:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: MyVpcB9FF1A25
      Tags:
        - Key: Name
          Value: MyvpcStack/MyVpc/Subnet-5
    Metadata:
      aws:cdk:path: MyvpcStack/MyVpc/Subnet-5/RouteTable
  MyVpcSubnet5RouteTableAssociationF4F12814:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: MyVpcSubnet5RouteTable6F28B908
      SubnetId:
        Ref: MyVpcSubnet5Subnet5513865A
    Metadata:
      aws:cdk:path: MyvpcStack/MyVpc/Subnet-5/RouteTableAssociation
  CustomVpcRestrictDefaultSGCustomResourceProviderRole26592FE0:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
      ManagedPolicyArns:
        - Fn::Sub: arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: Inline
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - ec2:AuthorizeSecurityGroupIngress
                  - ec2:AuthorizeSecurityGroupEgress
                  - ec2:RevokeSecurityGroupIngress
                  - ec2:RevokeSecurityGroupEgress
                Resource:
                  - Fn::Join:
                      - ""
                      - - "arn:"
                        - Ref: AWS::Partition
                        - ":ec2:"
                        - Ref: AWS::Region
                        - ":"
                        - Ref: AWS::AccountId
                        - :security-group/
                        - Fn::GetAtt:
                            - MyVpcB9FF1A25
                            - DefaultSecurityGroup
    Metadata:
      aws:cdk:path: MyvpcStack/Custom::VpcRestrictDefaultSGCustomResourceProvider/Role
  CustomVpcRestrictDefaultSGCustomResourceProviderHandlerDC833E5E:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: e77031893275c08bcaa0a774aa8b611727afd045b3b5d8e1e6f0f04063d9d386.zip
      Timeout: 900
      MemorySize: 128
      Handler: __entrypoint__.handler
      Role:
        Fn::GetAtt:
          - CustomVpcRestrictDefaultSGCustomResourceProviderRole26592FE0
          - Arn
      Runtime: nodejs16.x
      Description: Lambda function for removing all inbound/outbound rules from the VPC default security group
    DependsOn:
      - CustomVpcRestrictDefaultSGCustomResourceProviderRole26592FE0
    Metadata:
      aws:cdk:path: MyvpcStack/Custom::VpcRestrictDefaultSGCustomResourceProvider/Handler
      aws:asset:path: asset.e77031893275c08bcaa0a774aa8b611727afd045b3b5d8e1e6f0f04063d9d386
      aws:asset:property: Code
  CDKMetadata:
    Type: AWS::CDK::Metadata
    Properties:
      Analytics: v2:deflate64:H4sIAAAAAAAA/21QwW7CMAz9Fu5pGFzGFVVo4oKiMnGd0tQDQ+ugxCmaEP+Oo27kspOfn5/tZy/1aqHfZvYWK9ddqh5bfd+zdRcl1Be4pb4frk7V33QwtTKp7dHtU0vAmSuo8Ynh07Y9FL5w6xi9Q8vo6SXOYLM1Oewsf1iGm/1RJuAosAzeEkMQ/CeYnPxmaxarpwGI1dTxUA1En4KT8SmyH0oqa/8vmeBH7CAocQksxx+Rjllfe+owe34o8h3oc5yPi5V+l3+dI2IVEjEOoJspPgFcvfczSwEAAA==
    Metadata:
      aws:cdk:path: MyvpcStack/CDKMetadata/Default
    Condition: CDKMetadataAvailable
Conditions:
  CDKMetadataAvailable:
    Fn::Or:
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - af-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ca-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-northwest-1
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-2
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-3
          - Fn::Equals:
              - Ref: AWS::Region
              - me-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - sa-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-2
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-2
Parameters:
  BootstrapVersion:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /cdk-bootstrap/hnb659fds/version
    Description: Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]
Rules:
  CheckBootstrapVersion:
    Assertions:
      - Assert:
          Fn::Not:
            - Fn::Contains:
                - - "1"
                  - "2"
                  - "3"
                  - "4"
                  - "5"
                - Ref: BootstrapVersion
        AssertDescription: CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.

